[project]
dependencies = [
    "githead>=1.2.0",
    "httpx[brotli,zstd]",
    "networkx",
    "numpy",
    "scikit-learn",
    "shapely",
    "tqdm",
]
name = "osm-countries-geojson"
requires-python = "~=3.13"
version = "0.0.0"

[tool.uv]
package = false
python-downloads = "never"
python-preference = "only-system"

[tool.setuptools]
packages = ["."]

[tool.ruff]
exclude = [
    ".direnv",
    ".git",
    ".ruff_cache",
    ".venv",
]

indent-width = 4
line-length = 120
target-version = "py313"

[tool.ruff.lint]
ignore = []
# see https://docs.astral.sh/ruff/rules/ for rules documentation
select = [
    "A", # flake8-builtins
    "ARG", # flake8-unused-arguments
    "ASYNC", # flake8-async
    "B", # flake8-bugbear
    # "COM", # flake8-commas
    "C4", # flake8-comprehensions
    "E4", # pycodestyle
    "E7",
    "E9",
    "F", # pyflakes
    # "FBT", # flake8-boolean-trap
    "FLY", # flynt
    # "FURB", # refurb (preview)
    "G", # flake8-logging-format
    "I", # isort
    "INT", # flake8-gettext
    # "LOG", # flake8-logging (preview)
    "N", # pep8-naming
    "NPY", # numpy
    "PERF", # perflint
    "PIE", # flake8-pie
    "Q", # flake8-quotes
    "UP", # pyupgrade
    # "PL", # pylint
    "PT", # flake8-pytest-style
    "PTH", # flake8-use-pathlib
    "PYI", # flake8-pyi
    "RSE", # flake8-raise
    "RUF", # ruff
    "S", # flake8-bandit
    "SIM", # flake8-simplify
    "SLF", # flake8-self
    "SLOT", # flake8-slots
    "T10", # flake8-debugger
    # "T20", # flake8-print
    # "TRY", # tryceratops
    "YTT", # flake8-2020
]

fixable = ["ALL"]
unfixable = []

[tool.ruff.format]
quote-style = "single"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "lf"

[tool.ruff.lint.flake8-builtins]
builtins-ignorelist = ["id", "open", "type"]

[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"
inline-quotes = "single"
multiline-quotes = "double"

[tool.ruff.lint.pylint]
max-args = 10
